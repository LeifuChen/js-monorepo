import { gql } from 'graphql-request';
import { SynthBalancesQueryParams } from '../../src/types';
import { createGQLWhereString, createGQLBlockNumberString } from '../../src/utils';

export const createSynthBalancesQuery = (params?: SynthBalancesQueryParams): string => {
	const whereString = createGQLWhereString(
		Object.entries({
			synth: (params?.synth ?? null) != null ? 'synth' : null,
			synths: (params?.synths ?? null) != null ? 'synths' : null,
			timestamp_gte: (params?.minTimestamp ?? null) != null ? 'minTimestamp' : null,
			account: (params?.account ?? null) != null ? 'account' : null,
			timestamp_lt:
				(params?.autoGeneratedPaginationField ?? null) != null
					? 'autoGeneratedPaginationField'
					: null,
		})
	);

	return gql`
		query synthBalances($autoGeneratedPaginationField: Int, $max: Int, $account: String, $minTimestamp: Int, $synth: String, $synths: [String]) {
      synthBalances(
        first: $max${createGQLBlockNumberString(params?.blockNumber ?? null)}
        where: ${whereString}
        orderBy: timestamp
        orderDirection: desc
      ) {
        id
        amount
        account
        timestamp
        synth
			}
		}
	`;
};
